# --- Этап 1: Сборка (Build Stage) ---
# Используем официальный образ Golang для сборки
FROM golang:1.24-alpine AS builder

# Устанавливаем переменные окружения для создания статического бинарника
ENV CGO_ENABLED=0
ENV GOOS=linux

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Копируем go.mod и go.sum и загружаем зависимости
COPY go.mod ./
RUN go mod download

# Копируем исходный код
# Обратите внимание, что исходный код находится в папках cmd и internal
COPY . .

# Компилируем приложение. 
# Бинарник будет создан в /app/app_patterns
# Мы указываем go build, чтобы он искал точку входа в cmd/main.go
RUN go build -o home ./cmd/main.go


# --- Этап 2: Запуск (Run Stage) ---
# Используем минимальный образ Alpine для запуска (меньше 6MB!)
FROM alpine:latest

# Устанавливаем рабочую директорию
WORKDIR /root/

# Копируем скомпилированный бинарный файл из этапа сборки
COPY --from=builder /app/home .

# Указываем команду, которая будет выполнена при запуске контейнера
# Поскольку это консольное приложение, оно выполнит все демонстрационные функции
CMD ["./home"]